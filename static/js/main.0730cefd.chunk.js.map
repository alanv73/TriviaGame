{"version":3,"sources":["categories.js","helpers.js","pie.svg","sizes.js","QuestionCardStyles.js","CardBack.js","QuestionCard.js","TriviaGame.js","hooks/useIncrementState.js","hooks/useToggleState.js","hooks/useLocalStorageState.js","TriviaQuestion.js","App.js","reportWebVitals.js","index.js"],"names":["id","name","color","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","getTriviaQuestion","questionCount","difficulty","categoryId","a","apiOptions","apiURL","console","log","axios","get","result","triviaQuestion","data","results","correct_answer","categoryColor","categories","find","c","category","choices","incorrect_answers","question","questionText","type","correctAnswer","message","getRandomCategory","randNum","filter","selected","createMarkup","__html","size","xs","sm","md","lg","xl","gameContent","width","paddingBottom","cardBoundary","margin","marginTop","position","transition","transformStyle","sizes","cardFront","cardBack","transform","isFlipped","cardBackground","padding","borderRadius","backgroundColor","boxShadow","backfaceVisibility","webkitBackfaceVisibility","cardBorder","border","height","overflow","backDesign","cursor","display","flexDirection","marginBottom","fontSize","backItems","alignSelf","fontFamily","textAlign","incorrect","marginLeft","alignItems","card","minHeight","maxHeight","cardHeader","boxSizing","paddingTop","fontWeight","cardContent","choice","listStyleType","withStyles","styles","classes","isCorrect","handleClick","className","onClick","src","pie","alt","dangerouslySetInnerHTML","clickBack","showBack","style","map","i","TriviaGame","props","state","categoryName","categoryNumber","score","window","localStorage","getItem","checkAnswer","bind","nextQuestion","this","getQuestion","randCategory","questions","setState","answer","st","undefined","nextClick","Component","defaultProps","useIncrementState","value","useState","useToggleState","toggle","useLocalStorageState","key","defaultVal","val","JSON","parse","String","e","useEffect","setItem","stringify","TriviaQuestion","incrementScore","defaultCategories","setQuestion","toggleShowBack","isAnswerCorrect","toggleIsAnswerCorrect","getNewQuestion","newQuestion","handleBackClick","setTimeout","userGuess","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAAe,GACX,CACIA,GAAI,EACJC,KAAM,oBACNC,MAAO,UAEX,CACIF,GAAI,GACJC,KAAM,uBACNC,MAAO,OAEX,CACIF,GAAI,GACJC,KAAM,sBACNC,MAAO,QAEX,CACIF,GAAI,GACJC,KAAM,uBACNC,MAAO,QAEX,CACIF,GAAI,GACJC,KAAM,qCACNC,MAAO,QAEX,CACIF,GAAI,GACJC,KAAM,4BACNC,MAAO,QAEX,CACIF,GAAI,GACJC,KAAM,6BACNC,MAAO,UAEX,CACIF,GAAI,GACJC,KAAM,6BACNC,MAAO,UAEX,CACIF,GAAI,GACJC,KAAM,mBACNC,MAAO,cAEX,CACIF,GAAI,GACJC,KAAM,qBACNC,MAAO,cAEX,CACIF,GAAI,GACJC,KAAM,uBACNC,MAAO,cAEX,CACIF,GAAI,GACJC,KAAM,YACNC,MAAO,OAEX,CACIF,GAAI,GACJC,KAAM,SACNC,MAAO,UAEX,CACIF,GAAI,GACJC,KAAM,YACNC,MAAO,aAEX,CACIF,GAAI,GACJC,KAAM,UACNC,MAAO,UAEX,CACIF,GAAI,GACJC,KAAM,WACNC,MAAO,UAEX,CACIF,GAAI,GACJC,KAAM,MACNC,MAAO,OAEX,CACIF,GAAI,GACJC,KAAM,cACNC,MAAO,QAEX,CACIF,GAAI,GACJC,KAAM,UACNC,MAAO,cAEX,CACIF,GAAI,GACJC,KAAM,WACNC,MAAO,cAEX,CACIF,GAAI,GACJC,KAAM,wBACNC,MAAO,OAEX,CACIF,GAAI,GACJC,KAAM,mBACNC,MAAO,cAEX,CACIF,GAAI,GACJC,KAAM,wCACNC,MAAO,OAEX,CACIF,GAAI,GACJC,KAAM,sCACNC,MAAO,QCnHTC,EAAU,SAAAC,GAIZ,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGTD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGzB,OAAOD,GAGLQ,EAAiB,uCAAG,WAAOC,EAAeC,EAAYC,GAAlC,2BAAAC,EAAA,6DAChBC,EAAa,iBAAUJ,GAAV,sBACEC,GADF,oBAEAC,GAEbG,EALgB,UArBH,gCAqBG,OAKaD,GACnCE,QAAQC,IAAIF,GANU,kBASGG,IAAMC,IAAIJ,GATb,cASZK,EATY,OAWZC,EAAiBD,EAAOE,KAAKC,QAAQ,GAC3CP,QAAQC,IAAR,aAAkBI,EAAeG,iBAE7BC,EAAgBC,EAAWC,MAC3B,SAAAC,GAAC,OAAIA,EAAE9B,OAASuB,EAAeQ,YAAU9B,MAEzC+B,EAAU9B,EAAQ,GAAD,mBAEVqB,EAAeU,mBAFL,CAGbV,EAAeG,kBAIjBQ,EAAW,CACbC,aAAcZ,EAAeW,SAC7BH,SAAUR,EAAeQ,SACzBJ,cAAeA,EACfS,KAAMb,EAAea,KACrBvB,WAAYU,EAAeV,WAC3BmB,QAASA,EACTK,cAAed,EAAeG,gBA/BhB,kBAkCXQ,GAlCW,yCAqClBhB,QAAQC,IAAI,KAAImB,SArCE,kBAsCX,MAtCW,0DAAH,0DA0CjBC,EAAoB,SAACX,GACvB,IAAMY,EAAUhC,KAAKC,MAAMD,KAAKE,SAAWkB,EAAWa,QAAO,SAAAX,GAAC,OAAIA,EAAEY,YAAUnC,QAE9E,OADqBqB,EAAWa,QAAO,SAAAX,GAAC,OAAIA,EAAEY,YAAUF,IAYtDG,EAAe,SAAAnB,GACjB,MAAO,CAACoB,OAAQpB,I,QChFL,MAA0B,gC,OCA1B,WAINqB,GASD,MAAM,sBAAN,OARc,CACVC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,UAG2BL,GAAnC,MCZO,GACXM,YAAa,CACTC,MAAO,MACPC,cAAe,QAEnBC,cAAY,GACRF,MAAO,MACPG,OAAQ,WACRC,UAAW,OACXC,SAAU,WACVC,WAAY,eACZC,eAAgB,eANR,cAOPC,EAAW,MAAQ,CAChBR,MAAO,QARH,cAUPQ,EAAW,MAAQ,CAChBR,MAAO,QAXH,cAaPQ,EAAW,MAAQ,CAChBR,MAAO,QAdH,cAgBPQ,EAAW,MAAQ,CAChBR,MAAO,QAjBH,GAoBZS,UAAW,GACXC,SAAU,CACNC,UAAW,qBAEfC,UAAW,CACPD,UAAW,mBAEfE,eAAgB,CACZR,SAAU,WACVD,UAAW,OACXJ,MAAO,OAEPc,QAAS,QACTC,aAAc,OACdC,gBAAiB,kBACjBC,UAAW,uCACXC,mBAAoB,SACpBC,yBAA0B,UAE9BC,WAAY,CACRC,OAAQ,yBACRN,aAAc,OACdO,OAAQ,SACRnB,OAAQ,OACRoB,SAAU,UAEdC,WAAY,CACRC,OAAQ,UACR5E,MAAO,YACP6E,QAAS,OACTZ,QAAS,MACTa,cAAe,SAGfL,OAAQ,OACR,OAAQ,CACJlB,UAAW,QACXwB,aAAc,QACdC,SAAU,SAEd,QAAS,CACL7B,MAAO,QAGf8B,UAAW,CACPC,UAAW,SACXC,WAAY,0BAEhB9C,QAAS,CACL8C,WAAY,yBACZC,UAAW,SACXJ,SAAU,OAEdK,UAAW,CACPF,WAAY,yBACZ7B,OAAQ,QACR,OAAQ,CACJC,UAAW,IACXwB,aAAc,IACdO,WAAY,QACZC,WAAY,aACZP,SAAU,SAEd,OAAQ,CACJG,WAAY,wBACZJ,aAAc,EACdxB,UAAW,EACX6B,UAAW,SACXJ,SAAU,QAGlBQ,KAAM,CACFtB,aAAc,OACduB,UAAW,MACXC,UAAW,MACXb,QAAS,OACTC,cAAe,SACfxB,OAAQ,OAEZqC,WAAY,CACRxB,gBAAiB,QACjByB,UAAW,aACXb,aAAc,QACdb,aAAc,MACdd,cAAe,MACfqB,OAAQ,MACR,OAAQ,CACJU,WAAY,yBACZH,SAAU,QACVI,UAAW,SACX9B,OAAQ,gBACRuC,WAAY,SAGpB/D,SAAU,CAENmC,QAAS,oBACT,OAAQ,CACJkB,WAAY,wBACZH,SAAU,QACVc,WAAY,OACZxC,OAAQ,IACR8B,UAAW,SACXnB,QAAS,SAGjB8B,YAAa,CACTZ,WAAY,wBACZH,SAAU,MACVf,QAAS,IACTC,aAAc,MACdC,gBAAiB,QACjBM,OAAQ,SACRC,SAAU,OACV,MAAO,CAEHpB,OAAQ,wBAGhB0C,OAAQ,CACJC,cAAe,OACfhC,QAAS,sBACTW,OAAQ,UACRV,aAAc,OACdZ,OAAQ,SACR,UAAW,CACPwC,WAAY,OACZ3B,gBAAiB,e,OCpHd+B,kBAAWC,EAAXD,EA/Bf,YAKI,IAJAE,EAID,EAJCA,QACAhE,EAGD,EAHCA,cACAiE,EAED,EAFCA,UACAC,EACD,EADCA,YAEA,OACI,qBACIC,UAAS,UAAKH,EAAQpC,eAAb,YAA+BoC,EAAQvC,UADpD,SAGI,qBACI0C,UAAWH,EAAQ7B,WACnBiC,QAASF,EAFb,SAII,sBAAKC,UAAWH,EAAQzB,WAAxB,UACI,oBAAI4B,UAAWH,EAAQnB,UAAvB,0BACA,qBAAKsB,UAAWH,EAAQnB,UAAWwB,IAAKC,EAAKC,IAAI,QAE7CN,EACE,oBAAIE,UAAWH,EAAQ/D,QAAvB,qBACA,sBAAKkE,UAAWH,EAAQf,UAAxB,UACE,iDACA,oBAAIuB,wBAAyBlE,EAAaN,kBCqCvD8D,kBAAWC,EAAXD,EA1Df,YAWI,IAVAhE,EAUD,EAVCA,aACAJ,EASD,EATCA,SACAJ,EAQD,EARCA,cACAK,EAOD,EAPCA,QACAuE,EAMD,EANCA,YACAF,EAKD,EALCA,QACAC,EAID,EAJCA,UACAQ,EAGD,EAHCA,UACAC,EAED,EAFCA,SACA1E,EACD,EADCA,cAGA,OACI,qBAAKmE,UAAS,UAAKH,EAAQlD,aAA3B,SACI,sBAAKqD,UAAS,UAAKH,EAAQ/C,aAAb,YAA6ByD,GAAYV,EAAQrC,WAA/D,UACI,qBACIwC,UAAS,UAAKH,EAAQpC,eAAb,YAA+BoC,EAAQxC,WADpD,SAGI,qBAAK2C,UAAWH,EAAQ7B,WAAxB,SACI,sBAAKgC,UAAWH,EAAQZ,KAAxB,UACI,yBAAQe,UAAWH,EAAQT,WAA3B,UACI,8CACA,qBACIY,UAAWH,EAAQtE,SACnBiF,MAAO,CAAE5C,gBAAiBzC,GAF9B,SAII,6BAAKI,SAGb,sBAAKyE,UAAWH,EAAQL,YAAxB,UACI,mBAAGa,wBAAyBlE,EAAaR,KACzC,qBAAKqE,UAAWH,EAAQrE,QAAxB,SAEQA,EAAQiF,KAAI,SAACnF,EAAEoF,GAAH,OACR,oBAEIV,UAAWH,EAAQJ,OACnBY,wBAAyBlE,EAAab,GACtC2E,QAAS,kBAAMF,EAAYzE,KAHtBoF,kBAYrC,cAAC,EAAD,CACIZ,UAAWA,EACXjE,cAAeA,EACfkE,YAAaO,YC3C3BK,G,wDAKF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTnF,SAAU,GACVoF,aAAc,GACdC,eAAgB,EAChB5F,cAAe,QACfd,WAAY,OACZmB,QAAS,GACTK,cAAe,GACfmF,MAAO,EACPlF,QAAS,GACTyE,UAAU,EACVnF,WAAY6F,OAAOC,aAAaC,QAAQ,eACjC/F,EAAWqF,KAAI,SAAAnF,GAAC,kCAASA,GAAT,IAAYY,UAAU,QAGjD,EAAKkF,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAlBL,E,4FAqBnB,sBAAA9G,EAAA,sEACUgH,KAAKC,cADf,gD,sHAIA,wDAAAjH,EAAA,6DACYH,EAAkBmH,KAAKX,MAAvBxG,cADZ,EAEuCmH,KAAKV,MAAhCxG,EAFZ,EAEYA,WAAYe,EAFxB,EAEwBA,WACdY,EAAUhC,KAAKC,MAAMD,KAAKE,SAAWkB,EAAWa,QAAO,SAAAX,GAAC,OAAIA,EAAEY,YAAUnC,QACxE0H,EAAerG,EAAWa,QAAO,SAAAX,GAAC,OAAIA,EAAEY,YAAUF,GACxDtB,QAAQC,IAAI8G,GAENjH,EAAa,iBAAUJ,GAAV,sBACEC,GADF,oBAEAoH,EAAalI,IAC1BkB,EAVV,UAtCmB,gCAsCnB,OAUuCD,GACnCE,QAAQC,IAAIF,GAXhB,mBAc6BG,IAAMC,IAAIJ,GAdvC,QAccK,EAdd,OAgBc4G,EAAY5G,EAAOE,KAAKC,QAC9BP,QAAQC,IAAR,aAAkB+G,EAAU,GAAGxG,iBAE3BQ,EAAWgG,EAAU,GAAGhG,SACxBoF,EAAeY,EAAU,GAAGnG,SAC5BJ,EAAgBC,EAAWC,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,OAASsH,KAAcrH,MAC9D+B,EAAU+F,KAAK7H,QAAL,sBAEHgI,EAAU,GAAGjG,mBAFV,CAGNiG,EAAU,GAAGxG,kBAGjBW,EAAgB6F,EAAU,GAAGxG,eAEjCqG,KAAKI,SAAS,CACVjG,WACAoF,eACA3F,gBACAK,UACAK,kBAnCZ,yDAuCQnB,QAAQC,IAAI,KAAImB,SAvCxB,kBAwCe,IAxCf,0D,2EA4CA,SAAQnC,GAIJ,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGTD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGzB,OAAOD,I,gEAGX,WAAkBiI,GAAlB,eAAArH,EAAA,sDACIG,QAAQC,IAAIiH,GACJ/F,EAAkB0F,KAAKV,MAAvBhF,cAEL+F,IAAW/F,GACVnB,QAAQC,IAAI,YACZ4G,KAAKI,UAAS,SAAAE,GAAE,MAAK,CACjBb,MAAOa,EAAGb,MAAQ,EAClBlF,QAAS,WACTyE,UAAU,OAGdgB,KAAKI,UAAS,SAAAE,GAAE,MAAK,CACjB/F,QAAS,yBACTyE,UAAU,MAdtB,gD,wHAqBA,sBAAAhG,EAAA,6DACIgH,KAAKI,UAAS,SAAAE,GAAE,MAAK,CACjBtB,UAAU,MAFlB,SAKUgB,KAAKC,cALf,gD,0EAQA,WAAU,IAAD,EASDD,KAAKV,MAPLnF,EAFC,EAEDA,SACAoF,EAHC,EAGDA,aACA3F,EAJC,EAIDA,cACAK,EALC,EAKDA,QACAwF,EANC,EAMDA,MACAlF,EAPC,EAODA,QACAyE,EARC,EAQDA,SAGJ,YAAgBuB,IAAbpG,EAEK,sBAAKsE,UAAU,aAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAIA,UAAU,QAAd,oBAA8BgB,OAElC,qBAAKhB,UAAU,qBAAf,SACI,cAAC,EAAD,CACItE,SAAUA,EACVH,SAAUuF,EACV3F,cAAeA,EACfK,QAASA,EACTuE,YAAawB,KAAKH,YAClBtF,QAASA,EACTiG,UAAWR,KAAKD,aAChBf,SAAUA,SAKnB,S,GAzJMyB,cAAnBrB,EACKsB,aAAe,CAClB7H,cAAe,GA2JRuG,I,OCjKAuB,EATW,SAAAC,GAAU,IAAD,EACLC,mBAASD,GADJ,mBACxBtB,EADwB,KACjBc,EADiB,KAM/B,MAAO,CAACd,EAJU,WACdc,EAASd,EAAQ,MCMVwB,EATQ,WAAkB,IAAjBF,EAAgB,0DACVC,mBAASD,GADC,mBAC7BtB,EAD6B,KACtBc,EADsB,KAE9BW,EAAS,WACXX,GAAUd,IAGd,MAAO,CAACA,EAAOyB,ICiBJC,EAvBc,SAACC,EAAKC,GAAe,MAEpBL,oBAAS,WAC/B,IAAIM,EACJ,IACIA,EAAMC,KAAKC,MACP3B,OAAOC,aAAaC,QAAQqB,IAAQK,OAAOJ,IAEjD,MAAOK,GACLJ,EAAMD,EAEV,OAAOC,KAXmC,mBAEvC7B,EAFuC,KAEhCc,EAFgC,KAoB9C,OALAoB,qBAAU,WACN9B,OAAOC,aAAa8B,QAAQR,EAAKG,KAAKM,UAAUpC,MAEjD,CAACA,IAEG,CAACA,EAAOc,ICsDJuB,MAnEf,YAAiE,IAAD,IAAvC9I,qBAAuC,MAAzB,EAAyB,MAAtBC,kBAAsB,MAAX,SAAW,IAC5B6H,EAAkB,GADU,mBACrDlB,EADqD,KAC9CmC,EAD8C,OAExBZ,EAChC,aACAa,EAAkB3C,KAAI,SAAAnF,GAAC,kCAASA,GAAT,IAAYY,UAAU,QAJW,mBAErDd,EAFqD,aAM5BgH,sBAN4B,mBAMrD1G,EANqD,KAM3C2H,EAN2C,OAOzBhB,GAAe,GAPU,mBAOrD9B,EAPqD,KAO3C+C,EAP2C,OAQXjB,GAAe,GARJ,mBAQrDkB,EARqD,KAQpCC,EARoC,KAU5DT,qBAAU,WACNU,MACD,IAEH,IAAMA,EAAc,uCAAG,8BAAAlJ,EAAA,6DACbgB,EAAWQ,EAAkBX,GADhB,SAEOjB,EACtBC,EACAC,EACAkB,EAAShC,IALM,OAEbmK,EAFa,OAOnBL,EAAYK,GAPO,2CAAH,qDAsBdC,EAAe,uCAAG,sBAAApJ,EAAA,sDACpB+I,IAEA5I,QAAQC,IAAI,oBACZiJ,WAAU,sBAAC,sBAAArJ,EAAA,sEACDkJ,IADC,OAEJF,GACCC,IAHG,2CAIR,KARiB,2CAAH,qDAarB,YAAgB1B,IAAbpG,EAEK,sBAAKsE,UAAU,aAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAIA,UAAU,QAAd,oBAA8BgB,OAElC,cAAC,EAAD,2BACQtF,GADR,IAEIqE,YAjCI,SAAA8D,GAChBnJ,QAAQC,IAAR,aAAkBkJ,IAGfA,IAFuBnI,EAAlBG,gBAGJsH,IACAK,KAGJF,KAyBYxD,UAAWyD,EACXjD,UAAWqD,EACXpD,SAAUA,QAIf,MC7DAuD,MATf,WACE,OACE,qBAAK9D,UAAU,MAAf,SAEE,cAAC,EAAD,OCKS+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0730cefd.chunk.js","sourcesContent":["export default [\r\n    {\r\n        id: 9,\r\n        name: \"General Knowledge\",\r\n        color: 'orange'\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Entertainment: Books\",\r\n        color: 'tan'\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Entertainment: Film\",\r\n        color: 'pink'\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Entertainment: Music\",\r\n        color: 'pink'\r\n    },\r\n    {\r\n        id: 13,\r\n        name: \"Entertainment: Musicals & Theatres\",\r\n        color: 'pink'\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"Entertainment: Television\",\r\n        color: 'pink'\r\n    },\r\n    {\r\n        id: 15,\r\n        name: \"Entertainment: Video Games\",\r\n        color: 'orange'\r\n    },\r\n    {\r\n        id: 16,\r\n        name: \"Entertainment: Board Games\",\r\n        color: 'orange'\r\n    },\r\n    {\r\n        id: 17,\r\n        name: \"Science & Nature\",\r\n        color: 'lightgreen'\r\n    },\r\n    {\r\n        id: 18,\r\n        name: \"Science: Computers\",\r\n        color: 'lightgreen'\r\n    },\r\n    {\r\n        id: 19,\r\n        name: \"Science: Mathematics\",\r\n        color: 'lightgreen'\r\n    },\r\n    {\r\n        id: 20,\r\n        name: \"Mythology\",\r\n        color: 'tan'\r\n    },\r\n    {\r\n        id: 21,\r\n        name: \"Sports\",\r\n        color: 'orange'\r\n    },\r\n    {\r\n        id: 22,\r\n        name: \"Geography\",\r\n        color: 'lightblue'\r\n    },\r\n    {\r\n        id: 23,\r\n        name: \"History\",\r\n        color: 'yellow'\r\n    },\r\n    {\r\n        id: 24,\r\n        name: \"Politics\",\r\n        color: 'yellow'\r\n    },\r\n    {\r\n        id: 25,\r\n        name: \"Art\",\r\n        color: 'tan'\r\n    },\r\n    {\r\n        id: 26,\r\n        name: \"Celebrities\",\r\n        color: 'pink'\r\n    },\r\n    {\r\n        id: 27,\r\n        name: \"Animals\",\r\n        color: 'lightgreen'\r\n    },\r\n    {\r\n        id: 28,\r\n        name: \"Vehicles\",\r\n        color: 'lightgreen'\r\n    },\r\n    {\r\n        id: 29,\r\n        name: \"Entertainment: Comics\",\r\n        color: 'tan'\r\n    },\r\n    {\r\n        id: 30,\r\n        name: \"Science: Gadgets\",\r\n        color: 'lightgreen'\r\n    },\r\n    {\r\n        id: 31,\r\n        name: \"Entertainment: Japanese Anime & Manga\",\r\n        color: 'tan'\r\n    },\r\n    {\r\n        id: 32,\r\n        name: \"Entertainment: Cartoon & Animations\",\r\n        color: 'tan'\r\n    }\r\n];","import axios from 'axios';\r\nimport categories from './categories';\r\nconst TRIVIA_API_URL = \"https://opentdb.com/api.php?\";\r\n\r\nconst shuffle = array => {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nconst getTriviaQuestion = async (questionCount, difficulty, categoryId) => {\r\n    const apiOptions = `amount=${questionCount}` \r\n        + `&difficulty=${difficulty}` \r\n        + `&category=${categoryId}`;\r\n\r\n    const apiURL = `${TRIVIA_API_URL}${apiOptions}`;\r\n    console.log(apiURL);\r\n\r\n    try{\r\n        const result = await axios.get(apiURL);\r\n\r\n        const triviaQuestion = result.data.results[0];\r\n        console.log(`A: ${triviaQuestion.correct_answer}`);\r\n\r\n        let categoryColor = categories.find(\r\n            c => c.name === triviaQuestion.category).color;\r\n\r\n        let choices = shuffle(\r\n            [\r\n                ...triviaQuestion.incorrect_answers,\r\n                triviaQuestion.correct_answer\r\n            ]\r\n        );\r\n\r\n        const question = { \r\n            questionText: triviaQuestion.question,\r\n            category: triviaQuestion.category,\r\n            categoryColor: categoryColor,\r\n            type: triviaQuestion.type,\r\n            difficulty: triviaQuestion.difficulty,\r\n            choices: choices,\r\n            correctAnswer: triviaQuestion.correct_answer\r\n        }\r\n\r\n        return question;\r\n\r\n    } catch(err) {\r\n        console.log(err.message);\r\n        return null;\r\n    }\r\n}\r\n\r\nconst getRandomCategory = (categories) => {\r\n    const randNum = Math.floor(Math.random() * categories.filter(c => c.selected).length);\r\n    const randCategory = categories.filter(c => c.selected)[randNum];\r\n    return randCategory;\r\n}\r\n\r\nconst toggleCategory = (categories, categoryID) => {\r\n    const newCategories = categories.map(c => \r\n        c.id === categoryID ? {...c, selected: !c.selected} : c\r\n    );\r\n\r\n    return newCategories;\r\n}\r\n\r\nconst createMarkup = data => {\r\n    return {__html: data};\r\n}\r\n\r\n\r\nexport { shuffle, getTriviaQuestion, getRandomCategory, toggleCategory, createMarkup };","export default __webpack_public_path__ + \"static/media/pie.a9c7e888.svg\";","export default {\r\n    up() {\r\n\r\n    },\r\n    down(size) {\r\n        const sizes = {\r\n            xs: '575.98px',\r\n            sm: '767.98px',\r\n            md: '991.98px',\r\n            lg: '1199.98px',\r\n            xl: '1600px',\r\n        }\r\n\r\n        return `@media (max-width: ${sizes[size]})`;\r\n    }\r\n}","import sizes from './sizes';\r\nexport default {\r\n    gameContent: {\r\n        width: '80%',\r\n        paddingBottom: '50px',\r\n    },\r\n    cardBoundary: {\r\n        width: '40%',\r\n        margin: '0px auto',\r\n        marginTop: '50px',\r\n        position: 'relative',\r\n        transition: 'transform 1s',\r\n        transformStyle: 'preserve-3d',\r\n        [sizes.down('lg')]: {\r\n            width: '50%'\r\n        },\r\n        [sizes.down('md')]: {\r\n            width: '60%'\r\n        },\r\n        [sizes.down('sm')]: {\r\n            width: '70%'\r\n        },\r\n        [sizes.down('xs')]: {\r\n            width: '80%'\r\n        },\r\n    },\r\n    cardFront: {},\r\n    cardBack: {\r\n        transform: 'rotateY( 180deg )'\r\n    },\r\n    isFlipped: {\r\n        transform: 'rotateY(180deg)'\r\n    },\r\n    cardBackground: {\r\n        position: 'absolute',\r\n        marginTop: '-60%',\r\n        width: '100%',\r\n        // height: '100%',\r\n        padding: '1px 0',\r\n        borderRadius: '10px',\r\n        backgroundColor: 'rgb(19, 7, 122)',\r\n        boxShadow: '5px 5px 15px 3px rgba(0, 0, 0, 0.61)',\r\n        backfaceVisibility: 'hidden',\r\n        webkitBackfaceVisibility: 'hidden',\r\n    },\r\n    cardBorder: {\r\n        border: '0.4em double goldenrod',\r\n        borderRadius: '10px',\r\n        height: '29.5em',\r\n        margin: '10px',\r\n        overflow: 'hidden'\r\n    },\r\n    backDesign: {\r\n        cursor: 'pointer',\r\n        color: 'goldenrod',\r\n        display: 'flex',\r\n        padding: '1em',\r\n        flexDirection: 'column',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        height: '100%',\r\n        \"& h1\": {\r\n            marginTop: '0.5em',\r\n            marginBottom: '0.3em',\r\n            fontSize: '3.5em'\r\n        },\r\n        \"& img\": {\r\n            width: '50%'\r\n        }\r\n    },\r\n    backItems: {\r\n        alignSelf: 'center',\r\n        fontFamily: '\"Great Vibes\", cursive',\r\n    },\r\n    message: {\r\n        fontFamily: '\"Great Vibes\", cursive',\r\n        textAlign: 'center',\r\n        fontSize: '3em'\r\n    },\r\n    incorrect: {\r\n        fontFamily: '\"Great Vibes\", cursive',\r\n        margin: '1em 0',\r\n        \"& h2\": {\r\n            marginTop: '0',\r\n            marginBottom: '0',\r\n            marginLeft: '0.5em',\r\n            alignItems: 'flex-start',\r\n            fontSize: '1.5em'\r\n        },\r\n        \"& h4\": {\r\n            fontFamily: '\"Raleway\", sans-serif',\r\n            marginBottom: 0,\r\n            marginTop: 0,\r\n            textAlign: 'center',\r\n            fontSize: '2em'\r\n        }\r\n    },\r\n    card: {\r\n        borderRadius: '10px',\r\n        minHeight: '97%',\r\n        maxHeight: '97%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '8px',\r\n    },\r\n    cardHeader: {\r\n        backgroundColor: 'white',\r\n        boxSizing: 'border-box',\r\n        marginBottom: '0.5em',\r\n        borderRadius: '5px',\r\n        paddingBottom: '5px',\r\n        height: '26%',\r\n        \"& h1\": {\r\n            fontFamily: '\"Great Vibes\", cursive',\r\n            fontSize: '2.5em',\r\n            textAlign: 'center',\r\n            margin: '0 10px 10px 0',\r\n            paddingTop: '10px',\r\n        }\r\n    },\r\n    category: {\r\n        // backgroundColor: 'yellow',\r\n        padding: '0px 20px 0px 20px',\r\n        \"& h3\": {\r\n            fontFamily: '\"Raleway\", sans-serif',\r\n            fontSize: '1.2em',\r\n            fontWeight: 'bold',\r\n            margin: '0',\r\n            textAlign: 'center',\r\n            padding: '10px',\r\n        }\r\n    },\r\n    cardContent: {\r\n        fontFamily: '\"Raleway\", sans-serif',\r\n        fontSize: '1em',\r\n        padding: '0',\r\n        borderRadius: '5px',\r\n        backgroundColor: 'white',\r\n        height: '20.5em',\r\n        overflow: 'auto',\r\n        \"& p\": {\r\n            // marginTop: '0',\r\n            margin: '20px 15px 20px 15px',\r\n        }\r\n    },\r\n    choice: {\r\n        listStyleType: 'none',\r\n        padding: '10px 10px 10px 20px',\r\n        cursor: 'pointer',\r\n        borderRadius: '25px',\r\n        margin: '0 20px',\r\n        \"&:hover\": {\r\n            fontWeight: 'bold',\r\n            backgroundColor: '#eeeeeea4',\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { createMarkup } from './helpers';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport pie from './pie.svg';\r\nimport styles from './QuestionCardStyles';\r\n\r\nfunction CardBack({\r\n    classes, \r\n    correctAnswer, \r\n    isCorrect,\r\n    handleClick\r\n}) {\r\n    return (\r\n        <div \r\n            className={`${classes.cardBackground} ${classes.cardBack}`}\r\n        >\r\n            <div \r\n                className={classes.cardBorder}\r\n                onClick={handleClick}\r\n            >\r\n                <div className={classes.backDesign}>\r\n                    <h1 className={classes.backItems}>Trifle Quest</h1>\r\n                    <img className={classes.backItems} src={pie} alt=\"pie\"/>\r\n                    {\r\n                        isCorrect\r\n                        ? <h3 className={classes.message}>Correct</h3>\r\n                        : <div className={classes.incorrect}>\r\n                            <h2>The answer was:</h2>\r\n                            <h4 dangerouslySetInnerHTML={createMarkup(correctAnswer)} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(CardBack);","import React from 'react'\r\nimport { createMarkup } from './helpers';\r\nimport CardBack from './CardBack';\r\nimport styles from './QuestionCardStyles';\r\nimport pie from './pie.svg';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nfunction QuestionCard({ \r\n    questionText, \r\n    category, \r\n    categoryColor, \r\n    choices, \r\n    handleClick, \r\n    classes,\r\n    isCorrect,\r\n    clickBack,\r\n    showBack,\r\n    correctAnswer\r\n}) {\r\n\r\n    return (\r\n        <div className={`${classes.gameContent}`}>\r\n            <div className={`${classes.cardBoundary} ${showBack && classes.isFlipped}`}>\r\n                <div \r\n                    className={`${classes.cardBackground} ${classes.cardFront}`}\r\n                >\r\n                    <div className={classes.cardBorder}>\r\n                        <div className={classes.card}>\r\n                            <header className={classes.cardHeader}>\r\n                                <h1>Trifle Quest</h1>\r\n                                <div \r\n                                    className={classes.category}\r\n                                    style={{ backgroundColor: categoryColor }}\r\n                                >\r\n                                    <h3>{category}</h3>\r\n                                </div>\r\n                            </header>\r\n                            <div className={classes.cardContent}>\r\n                                <p dangerouslySetInnerHTML={createMarkup(questionText)}/>\r\n                                <div className={classes.choices}>\r\n                                    {\r\n                                        choices.map((c,i) => (\r\n                                            <li \r\n                                                key={i}\r\n                                                className={classes.choice}\r\n                                                dangerouslySetInnerHTML={createMarkup(c)}\r\n                                                onClick={() => handleClick(c)}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <CardBack \r\n                    isCorrect={isCorrect}\r\n                    correctAnswer={correctAnswer} \r\n                    handleClick={clickBack}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(QuestionCard);","import React, { Component } from 'react';\r\nimport QuestionCard from './QuestionCard';\r\nimport axios from 'axios';\r\nimport categories from './categories';\r\nimport './TriviaGame.css';\r\n\r\n/* https://opentdb.com/api_config.php */\r\nconst TRIVIA_API_URL = \"https://opentdb.com/api.php?\";\r\n\r\nconst DIFFICULTY = {\r\n    easy: 'easy',\r\n    medium: 'medium',\r\n    hard: 'hard'\r\n}\r\n\r\nclass TriviaGame extends Component {\r\n    static defaultProps = {\r\n        questionCount: 1\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            question: '',\r\n            categoryName: '',\r\n            categoryNumber: 0,\r\n            categoryColor: 'white',\r\n            difficulty: 'hard',\r\n            choices: [],\r\n            correctAnswer: '',\r\n            score: 0,\r\n            message: '',\r\n            showBack: false,\r\n            categories: window.localStorage.getItem(\"categories\") \r\n                || categories.map(c => ({...c, selected: true}))\r\n        }\r\n\r\n        this.checkAnswer = this.checkAnswer.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getQuestion();\r\n    }\r\n\r\n    async getQuestion() {\r\n        const { questionCount } = this.props;\r\n        const { difficulty, categories } = this.state;\r\n        const randNum = Math.floor(Math.random() * categories.filter(c => c.selected).length);\r\n        const randCategory = categories.filter(c => c.selected)[randNum];\r\n        console.log(randCategory);\r\n\r\n        const apiOptions = `amount=${questionCount}` \r\n            + `&difficulty=${difficulty}` \r\n            + `&category=${randCategory.id}`;\r\n        const apiURL = `${TRIVIA_API_URL}${apiOptions}`;\r\n        console.log(apiURL);\r\n\r\n        try{\r\n            const result = await axios.get(apiURL);\r\n\r\n            const questions = result.data.results;\r\n            console.log(`A: ${questions[0].correct_answer}`);\r\n\r\n            let question = questions[0].question;\r\n            let categoryName = questions[0].category;\r\n            let categoryColor = categories.find(c => c.name === categoryName).color;\r\n            let choices = this.shuffle(\r\n                [\r\n                    ...questions[0].incorrect_answers,\r\n                    questions[0].correct_answer\r\n                ]\r\n            );\r\n            let correctAnswer = questions[0].correct_answer;\r\n\r\n            this.setState({ \r\n                question,\r\n                categoryName,\r\n                categoryColor,\r\n                choices,\r\n                correctAnswer\r\n            });\r\n\r\n        } catch(err) {\r\n            console.log(err.message);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    async checkAnswer(answer) {\r\n        console.log(answer);\r\n        const { correctAnswer } = this.state;\r\n\r\n        if(answer === correctAnswer) {\r\n            console.log('Correct!');\r\n            this.setState(st => ({\r\n                score: st.score + 1,\r\n                message: 'Correct!',\r\n                showBack: true\r\n            }));\r\n        } else {\r\n            this.setState(st => ({\r\n                message: 'Incorrect 😢',\r\n                showBack: true\r\n            }));\r\n        }\r\n\r\n        // await this.getQuestion()\r\n    }\r\n\r\n    async nextQuestion() {\r\n        this.setState(st => ({\r\n            showBack: false,\r\n        }));\r\n\r\n        await this.getQuestion();\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            question, \r\n            categoryName,\r\n            categoryColor, \r\n            choices,\r\n            score,\r\n            message,\r\n            showBack\r\n        } = this.state;\r\n\r\n        if(question !== undefined)\r\n            return (\r\n                <div className=\"TriviaGame\">\r\n                    <div className=\"triviagame-score\">\r\n                        <h2 className=\"score\">Score: {score}</h2>\r\n                    </div>\r\n                    <div className=\"triviagame-content\">\r\n                        <QuestionCard \r\n                            question={question}\r\n                            category={categoryName}\r\n                            categoryColor={categoryColor}\r\n                            choices={choices}\r\n                            handleClick={this.checkAnswer}\r\n                            message={message}\r\n                            nextClick={this.nextQuestion}\r\n                            showBack={showBack}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default TriviaGame;","import { useState } from 'react';\r\n\r\nconst useIncrementState = value => {\r\n    const [state, setState] = useState(value);\r\n    const increment = () => {\r\n        setState(state + 1);\r\n    }\r\n\r\n    return [state, increment];\r\n}\r\n\r\nexport default useIncrementState;","import { useState } from 'react';\r\n\r\nconst useToggleState = (value=false) => {\r\n    const [state, setState] = useState(value);\r\n    const toggle = () => {\r\n        setState(!state);\r\n    }\r\n\r\n    return [state, toggle];\r\n}\r\n\r\nexport default useToggleState;","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorageState = (key, defaultVal) => {\r\n    // make piece of state based off of value in local storage (or default value)\r\n    const [state, setState] = useState(() => {\r\n        let val;\r\n        try{\r\n            val = JSON.parse(\r\n                window.localStorage.getItem(key) || String(defaultVal)\r\n            );\r\n        } catch (e) {\r\n            val = defaultVal;\r\n        }\r\n        return val;\r\n    });\r\n\r\n    // useEffect to update local storage when state changes\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n        // eslint-disable-next-line\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n}\r\n\r\nexport default useLocalStorageState;","import React, { useState, useEffect } from 'react';\r\nimport QuestionCard from './QuestionCard';\r\nimport defaultCategories from './categories';\r\nimport { shuffle, getTriviaQuestion, getRandomCategory } from './helpers';\r\nimport useIncrementState from './hooks/useIncrementState';\r\nimport useToggleState from './hooks/useToggleState';\r\nimport useLocalStorageState from './hooks/useLocalStorageState';\r\nimport './TriviaGame.css';\r\n\r\nfunction TriviaQuestion({questionCount=1, difficulty='medium'}) {\r\n    const [score, incrementScore] = useIncrementState(0);\r\n    const [categories, setCategories] = useLocalStorageState(\r\n        \"categories\", \r\n        defaultCategories.map(c => ({...c, selected: true}))\r\n    );\r\n    const [question, setQuestion] = useState();\r\n    const [showBack, toggleShowBack] = useToggleState(false);\r\n    const [isAnswerCorrect, toggleIsAnswerCorrect] = useToggleState(false);\r\n\r\n    useEffect(() => {\r\n        getNewQuestion();\r\n    }, []);\r\n\r\n    const getNewQuestion = async () => {\r\n        const category = getRandomCategory(categories)\r\n        const newQuestion = await getTriviaQuestion(\r\n            questionCount,\r\n            difficulty,\r\n            category.id\r\n        );\r\n        setQuestion(newQuestion);\r\n    }\r\n\r\n    const handleGuess = userGuess => {\r\n        console.log(`U: ${userGuess}`);\r\n        const { correctAnswer } = question;\r\n\r\n        if(userGuess === correctAnswer) {\r\n            incrementScore();\r\n            toggleIsAnswerCorrect();\r\n        }\r\n\r\n        toggleShowBack();\r\n    }\r\n\r\n    const handleBackClick = async () => {\r\n        toggleShowBack();\r\n        \r\n        console.log('getting question');\r\n        setTimeout(async () => {\r\n            await getNewQuestion();\r\n            if(isAnswerCorrect) \r\n                toggleIsAnswerCorrect();\r\n        }, 200);\r\n        \r\n\r\n    }\r\n\r\n    if(question !== undefined)\r\n        return (\r\n            <div className=\"TriviaGame\">\r\n                <div className=\"triviagame-score\">\r\n                    <h2 className=\"score\">Score: {score}</h2>\r\n                </div>\r\n                <QuestionCard \r\n                    {...question}\r\n                    handleClick={handleGuess}\r\n                    isCorrect={isAnswerCorrect}\r\n                    clickBack={handleBackClick}\r\n                    showBack={showBack}\r\n                />\r\n            </div>\r\n        )\r\n        return null;\r\n}\r\n\r\nexport default TriviaQuestion\r\n","import TriviaGame from './TriviaGame';\r\nimport TriviaQuestion from './TriviaQuestion';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <TriviaGame /> */}\r\n      <TriviaQuestion />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}